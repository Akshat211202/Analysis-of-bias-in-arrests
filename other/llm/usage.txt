LLM: ChatGPT-4.
Date: 23 September 2024

#### Preamble ####
# Purpose: Downloading and saving the data from OpenData Toronto for Police Race and Identity Based Data Collection: Arrests & Strip Searches
# Author: Akshat Aneja
# Date: 23 September 2024
# Contact: akshat.aneja@mail.utoronto.ca
# License: MIT
# Pre-requisites: none
# Datasets: https://open.toronto.ca/dataset/police-race-and-identity-based-data-collection-arrests-strip-searches/

#### Workspace setup ####
library(tidyverse)

#### Clean data ####
# Reading the data
data <- read.csv("data/raw_data/raw_data.csv")

cleaned_data <- data |>
  select(
    Arrest_Year, Perceived_Race, Age_group__at_arrest_, Youth_at_arrest__under_18_years, Booked, SearchReason_CauseInjury, SearchReason_AssistEscape, SearchReason_PossessWeapons, SearchReason_PossessEvidence)

# Combining the columns that are similar
cleaned_data <- cleaned_data %>%
  mutate(search_reason = case_when(
    SearchReason_CauseInjury == 1 ~ "1",
    SearchReason_AssistEscape == 1 ~ "1",
    SearchReason_PossessWeapons == 1 ~ "1",
    SearchReason_PossessEvidence == 1 ~ "1",
    TRUE ~ "0"
  ))

# Rename the columns
cleaned_data <- cleaned_data %>%
  rename(
    age_group = Age_group__at_arrest_,
    youth_at_arrest_under_18_years = Youth_at_arrest__under_18_years
  )

# Mutating the date for age groups involving Aged 17 years and younger and Aged 17 years and under essentially they mean the same thing
cleaned_data <- cleaned_data %>%
  mutate(age_group = case_when(
    age_group == "Aged 17 years and younger" ~ "Aged 17 years and under",
    age_group == "Aged 17 years and under" ~ "Aged 17 years and under",
    TRUE ~ age_group
  ))

# Mutating for booked with NA values
cleaned_data <- cleaned_data %>%
  mutate(booked = case_when(
    is.na(Booked) ~ "0",
    Booked == 1 ~ "1",
    TRUE ~ "Not Booked"
  ))

cleaned_data <- cleaned_data |>
  select(
    Arrest_Year, Perceived_Race, age_group, youth_at_arrest_under_18_years, booked, search_reason) |>
  rename(
    arrest_year = Arrest_Year,
    perceived_race = Perceived_Race
  )

write.csv("data/analysis_data/analysis_data.csv")

write.csv("data/analysis_data/analysis_data.csv")
"","x"
"1","data/analysis_data/analysis_data.csv"

Why am I getting this output?
ChatGPT said:
ChatGPT
The reason you're getting the output "" , "x" followed by "1", "data/analysis_data/analysis_data.csv" is that the write.csv() function in R by default includes row names in the output. This is why you see an additional column (with an empty header and values like 1, 2, etc.), and this is causing the extra unwanted column in your output.

To prevent this, you need to disable the row.names parameter when writing the CSV. Here's the corrected version of your code for saving the cleaned data:

r
Copy code
write.csv(cleaned_data, "data/analysis_data/analysis_data.csv", row.names = FALSE)
By setting row.names = FALSE, it will stop including the row numbers, and your CSV file will only have the intended columns without the extra row numbering.

Let me know if you need any further help with this!






You said:
Write more tests where arrest year is between 2020 and 2021, booked is either 0 or 1 and search_reason is either 0 or 1, minor is string "not a youth" or Youth (aged 17 years and under)
class(arrest_data$arrest_year) == "numeric"
class(arrest_data$booked) == "numeric"
class(arrest_data$search_reason) == "numeric"

class(arrest_data$age_group) == "character"
class(arrest_data$perceived_race) == "character"
class(arrest_data$minor) == "character"
ChatGPT said:
ChatGPT
To generate additional tests based on your specified conditions, here’s how you can implement and structure the tests for the arrest_data DataFrame. I will include checks for whether the arrest_year is between 2020 and 2021, whether booked and search_reason are either 0 or 1, and if minor is either "not a youth" or "Youth (aged 17 years and under)." I'll also check that the classes of each column match your expectations. Here’s the R code:

r
Copy code
#### Additional Tests ####

# 1. Test: Arrest year should be between 2020 and 2021
test_arrest_year_range <- all(arrest_data$arrest_year >= 2020 & arrest_data$arrest_year <= 2021)
if (!test_arrest_year_range) {
  stop("Error: Some entries in arrest_year are not between 2020 and 2021.")
} else {
  print("Test 1: arrest_year is between 2020 and 2021 - Passed.")
}

# 2. Test: Booked should be either 0 or 1
test_booked_values <- all(arrest_data$booked %in% c(0, 1))
if (!test_booked_values) {
  stop("Error: Some entries in booked are not 0 or 1.")
} else {
  print("Test 2: booked contains only 0 and 1 - Passed.")
}

# 3. Test: Search_reason should be either 0 or 1
test_search_reason_values <- all(arrest_data$search_reason %in% c(0, 1))
if (!test_search_reason_values) {
  stop("Error: Some entries in search_reason are not 0 or 1.")
} else {
  print("Test 3: search_reason contains only 0 and 1 - Passed.")
}

# 4. Test: Minor should be either "not a youth" or "Youth (aged 17 years and under)"
test_minor_values <- all(arrest_data$minor %in% c("not a youth", "Youth (aged 17 years and under)"))
if (!test_minor_values) {
  stop





You said:
In r script
ChatGPT said:
ChatGPT
Here’s the R script version with the tests implemented as functions or conditions, following the structure you've outlined:

r
Copy code
#### Additional Tests ####

# 1. Test: Arrest year should be between 2020 and 2021
test_arrest_year_range <- function() {
  if (all(arrest_data$arrest_year >= 2020 & arrest_data$arrest_year <= 2021)) {
    print("Test 1: arrest_year is between 2020 and 2021 - Passed.")
  } else {
    stop("Error: Some entries in arrest_year are not between 2020 and 2021.")
  }
}

# 2. Test: Booked should be either 0 or 1
test_booked_values <- function() {
  if (all(arrest_data$booked %in% c(0, 1))) {
    print("Test 2: booked contains only 0 and 1 - Passed.")
  } else {
    stop("Error: Some entries in booked are not 0 or 1.")
  }
}

# 3. Test: Search_reason should be either 0 or 1
test_search_reason_values <- function() {
  if (all(arrest_data$search_reason %in% c(0, 1))) {
    print("Test 3: search_reason contains only 0 and 1 - Passed.")
  } else {
    stop("Error: Some entries in search_reason are not 0 or 1.")
  }
}

# 4. Test: Minor should be either "not a youth" or "Youth (aged 17 years and under)"
test_minor_values <- function() {
  if (all(arrest_data$minor %in% c("not a youth", "Youth (aged 17 years and under)"))) {
    print("Test 4: minor contains only 'not a youth' or 'Youth (aged 17 years and under)' - Passed.")
  } else {
    stop("Error: Some entries in minor are not valid.")
  }
}

# 5. Class tests for arrest_year, booked, search_reason, age_group, perceived_race, and minor

test_column_classes <- function() {
  if (class(arrest_data$arrest_year) != "numeric") stop("Error: arrest





You said:
Simple test please
ChatGPT said:
ChatGPT
Here’s a simplified R script version with basic tests:

r
Copy code
#### Simple Tests ####

# Test: Arrest year should be between 2020 and 2021
if (all(arrest_data$arrest_year >= 2020 & arrest_data$arrest_year <= 2021)) {
  print("Test 1: arrest_year is between 2020 and 2021 - Passed.")
} else {
  print("Test 1: arrest_year is not within 2020 and 2021 - Failed.")
}

# Test: Booked should be either 0 or 1
if (all(arrest_data$booked %in% c(0, 1))) {
  print("Test 2: booked contains only 0 and 1 - Passed.")
} else {
  print("Test 2: booked contains values other than 0 or 1 - Failed.")
}

# Test: Search_reason should be either 0 or 1
if (all(arrest_data$search_reason %in% c(0, 1))) {
  print("Test 3: search_reason contains only 0 and 1 - Passed.")
} else {
  print("Test 3: search_reason contains values other than 0 or 1 - Failed.")
}

# Test: Minor should be either "not a youth" or "Youth (aged 17 years and under)"
if (all(arrest_data$minor %in% c("not a youth", "Youth (aged 17 years and under)"))) {
  print("Test 4: minor contains valid values - Passed.")
} else {
  print("Test 4: minor contains invalid values - Failed.")
}
These tests check that the values in arrest_year, booked, search_reason, and minor are within the expected ranges and categories, printing a simple pass/fail message.






You said:
cleaned_data <- cleaned_data |>
  select(
    Arrest_Year, age_group, booked, search_reason, Perceived_Race, youth_at_arrest_under_18_years) |>
  rename(
    arrest_year = Arrest_Year,
    perceived_race = Perceived_Race,
    minor = youth_at_arrest_under_18_years
Make arrest_year, search_reason and booked as numeric in r script
ChatGPT said:
ChatGPT
Here’s how you can modify the arrest_year, search_reason, and booked columns to be numeric in your R script:

r
Copy code
# Select relevant columns and rename them
cleaned_data <- cleaned_data |>
  select(
    Arrest_Year, age_group, booked, search_reason, Perceived_Race, youth_at_arrest_under_18_years) |>
  rename(
    arrest_year = Arrest_Year,
    perceived_race = Perceived_Race,
    minor = youth_at_arrest_under_18_years
  )

# Convert arrest_year, search_reason, and booked columns to numeric
cleaned_data <- cleaned_data |>
  mutate(
    arrest_year = as.numeric(arrest_year),
    search_reason = as.numeric(search_reason),
    booked = as.numeric(booked)
  )
This script first selects and renames the columns, then converts the specified columns (arrest_year, search_reason, and booked) to numeric using the mutate() and as.numeric() functions.


